{
  "compilerOptions": {
    "rootDir": "./",
    "incremental": true /* Enable incremental compilation */,
    "target": "ESNEXT" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "jsx": "react-jsx" /* Specify what JSX code is generated. */,
    "experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "module": "esnext" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "removeComments": true /* Disable emitting comments. */,
    "importHelpers": true /* Allow importing helper functions from tslib once per project, instead of including them per-file. */,
    "importsNotUsedAsValues": "remove" /* Specify emit/checking behavior for imports that are only used for types */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "lib": ["DOM", "DOM.Iterable", "ESNext"],
    "outDir": "dist",
    "composite": true,
    "resolveJsonModule": true, // 可以解析json导入json文件
    "emitDeclarationOnly": true // 只输出声明文件,不输出js文件。使用tsc生成声明文件，使用后babel转化ts文件
  },
  "include": [
    "global.d.ts",
    "package.json",
    "postcss.config.cjs",
    "packages",
    "lib"
  ],
  "exclude": ["commitlint.config.cjs", "dist", "node_modules"],
  "references": [{ "path": "./libs/common" }],
  "ts-node": {
    "esm": true,
    "compilerOptions": {
      "module": "esnext"
    }
  }
}
